version: '3'

services:
  redis:
    restart: always
    image: redis:3.2
    volumes:
      - redis_volume:/data

  db:
    restart: always
    image: mysql:5.6
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_general_ci
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: 'observe2ch'
    volumes:
      - mysql_volume:/var/lib/mysql

  http:
    restart: always
    image: nginx:1.13
    command: /bin/sh -c "envsubst '$$APP_HOST' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"
    depends_on:
      - app
    links:
      - app
    networks:
      - default
    ports:
      - '8080:80'
    environment:
      APP_HOST: app
    volumes:
        - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf.template
        - ./client/public:/var/www/assets:ro

  app:
    build:
      context: ""
      dockerfile: ./docker/Dockerfile
    command: npm run dev
    depends_on:
      - db
      - redis
    links:
      - db
      - redis
    networks:
      - default
    volumes:
      - /home/observe-2ch/node_modules
      - .:/home/observe-2ch
    environment:
      NODE_ENV: development
      REDIS_HOST: redis
      MYSQL_HOST: db
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: 'observe2ch'
      OBSERVE2CH_TWITTER_CONSUMER: ${OBSERVE2CH_TWITTER_CONSUMER}
      OBSERVE2CH_TWITTER_CONSUMER_SECRET: ${OBSERVE2CH_TWITTER_CONSUMER_SECRET}

volumes:
  mysql_volume:
  redis_volume:

networks:
  default:
    driver: bridge
